version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      #- $(aws ecr get-login --region ap-south-1 --no-include-email)
      # below command can just copy from our AWS ECR repository.(Goto AWS ECR repository -> View push commands)
      - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 722771351613.dkr.ecr.ap-southeast-1.amazonaws.com
      - # Replace with this to your repository URI
      # REPOSITORY_URI also should retrieved from AWS ECR repository
      - REPOSITORY_URI=722771351613.dkr.ecr.ap-southeast-1.amazonaws.com/springboot-demo-ecr
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean install
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # Give your container name
      - DOCKER_CONTAINER_NAME=springboot-aws-fargate
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      #Below file will be used by AWS code deploy service
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - target/springboot-aws-fargate.jar